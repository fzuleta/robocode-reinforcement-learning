group 'com.robocode'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = "1.2.30"
    ext.kotlin_coroutine_core_version = "0.22.3"

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
apply plugin: 'java'
apply plugin: 'kotlin'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutine_core_version"
    compile files("resources/libs/robocode.jar")
    compile group: 'org.deeplearning4j', name: 'deeplearning4j-core', version: '0.9.1'
    testCompile group: 'org.nd4j', name: 'nd4j-native-platform', version: '0.9.1'
    compile group: 'org.datavec', name: 'datavec-api', version: '0.9.1'
    compile group: 'org.deeplearning4j', name: 'rl4j-core', version: '0.9.1'
    compile group: 'org.deeplearning4j', name: 'rl4j-api', version: '0.9.1'
    compile group: 'org.deeplearning4j', name: 'deeplearning4j-nlp', version: '0.9.1'
    compile group: 'org.deeplearning4j', name: 'deeplearning4j-nn', version: '0.9.1'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileKotlin.kotlinOptions.suppressWarnings = true
kotlin.experimental.coroutines = 'enable'


task copyKotlinRuntime << {
    def configuration = project.configurations.getByName("compile")
    def allDependencies = configuration.getResolvedConfiguration().getResolvedArtifacts().collect() {
        return it.file
    }
    println(allDependencies)
    project.copy {
        from(zipTree(allDependencies[1]))
        from(zipTree(allDependencies[0]))
        into(sourceSets.main.output.classesDir)
    }
}

task copySources << {

    project.copy {
        from(sourceSets.main.java)
        into(sourceSets.main.output.classesDir)

        from(sourceSets.main.kotlin)
        into(sourceSets.main.output.classesDir)

    }
}
jar.dependsOn copySources
jar.dependsOn copyKotlinRuntime

jar.from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
jar.archiveName = "${group}.${name}_${version}.jar"
jar.manifest.attributes 'Main-Class': 'robocode.Robocode'